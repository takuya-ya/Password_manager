#!/bin/bash

#初回だけファイルを暗号化しておく。無視できるエラーをリダイレクト
gpg -c PASSWORD.txt 2> /dev/null


# 繰り返し条件を設定
while true
do
 echo "パスワードマネージャーへようこそ！"
 echo "次の選択肢から入力してください(Add Password/Get Password/Exit):"
 read choice

 #Add Passwordを選択した場合の処理
 if [ "$choice" = "Add Password" ]; then
   echo "サービス名を入力してください:"
   read service
   echo "ユーザー名を入力してください:"
   read usr
   echo "パスワードを入力してください:"
   read -s pass
   
   #暗号化したファイルを復元
   gpg -d PASSWORD.txt.gpg > PASSWORD.txt 2>/dev/null
   rm PASSWORD.txt.gpg
   #パスワードを追加する処理
   { 
    echo
    echo "サービス名:"$service
    echo "ユーザー名:"$usr
    echo "パスワード名:"$pass
    } >> PASSWORD.txt
  
   #全ての質問に入力しているかどうかの判定条件
   if [ "$service" ] && [ "$usr" ] && [ "$pass" ]; then
      echo 
      echo "パスワードの追加は成功しました"
      echo
   fi
    
    #パスワードの暗号化
    gpg -c PASSWORD.txt
    rm PASSWORD.txt
    
 #Get Passwordが選択された場合の処理
 elif [[ "$choice" = "Get Password" ]]; then
 
    #暗号化したファイルを復元
   gpg -d PASSWORD.txt.gpg > PASSWORD.txt 2>/dev/null
   rm PASSWORD.txt.gpg
   
   echo "サービス名を入力してください"
   read service_name
   grep -A 2 $service_name < PASSWORD.txt
   echo
   
    #パスワードの暗号化
   gpg -c PASSWORD.txt
   rm PASSWORD.txt
     
    #サービス名がなかった場合
   if [ $? = 1 ]; then
     echo "そのサービスは登録されていません"
     echo
   fi
      
 #Exitが選択された場合の処理
 elif [ "$choice" = "Exit" ]; then
     echo -e "Thank you\e[38;5;196m!\e[0m"
     break #ループから抜ける
 # Add Password/Get Password/Exit 以外が入力された場合
 else
    echo "入力が間違えています。Add Password/Get Password/Exitから入力してください"
    echo 
 fi
done